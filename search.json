[{"path":"https://matteoce.github.io/barcodeMineR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 barcodeMineR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/articles/api_rate_barcodeMineR.html","id":"rate-limit-and-parallelization","dir":"Articles","previous_headings":"","what":"Rate limit and parallelization","title":"Speeding up the recovery of DNA barcodes","text":"One main advantages barcodeMineR package consists leveraging asynchronous parallelizing framework future package speed download sequences NCBI repository. following commands retrieve 1837 records, corresponding species Promachocrinus kerguelensis, taking approximately 1.94209638834 minutes. NCBI servers allows three requests per second single user. limit respected, NCBI block requests time. “Classic” parallelization viable option, considering different requests may take significantly different time (may send request DNA barcodes one CDS rRNA, download whole genomes). reason, running sequentially (like lapply loop waiting time 1/3 seconds) highly subjected execution time request. context, asynchronous parallelizing framework future package comes handy. synthesis, request sent background process, block current R session send another request specified time, provided enough “workers” (cores) available. means , using future framework, can send request every 1/3 second, independently completion previous request. can setup future framework using functions. , ’re setting “multisession” plan using available cores machine: can specify number cores using workers argument, check many cores available using following command: can revert “normal”, sequential framework ’re done work using barcodeMineR package, supplying “sequential” command. Remember proceeding , unrelated work, case ’re interested using asynchronous framework. ’re unsure plan current R session set , use command without arguments. plan (“multisession”) works OSes, Rstudio command line. significantly speed recovery records NCBI, especially {r, echo = TRUE, eval = FALSE}download_ncbi function. However, proceeding example, downloading large numbers records BOLD NCBI databases, suggested include progress bar. , ’re relying another beautiful package, progressr package. , don’t need supply specific arguments barcodeMineR functions activate , can “externally”: Now, progress bar appear downloading records, different messages occasionally printed inform user current status operation. progress bar can modified, according user’s preferences, reported progressr documentation. Now, entire process downloading Promachocrinus kerguelensis take sensibly less time “sequential” future plan, providing final results 52 seconds.","code":"library(barcodeMineR)  tax <- get_ncbi_taxonomy(\"Promachocrinus kerguelensis\")  recs <- download_ncbi(tax, ask = FALSE) future::plan(\"multisession\") parallelly::availableWorkers() #> [1] \"localhost\" \"localhost\" \"localhost\" \"localhost\" progressr::handlers(global=TRUE) progressr::handlers(\"progress\")"},{"path":"https://matteoce.github.io/barcodeMineR/articles/api_rate_barcodeMineR.html","id":"stay-safe-and-fast-with-the-ncbi-api-key","dir":"Articles","previous_headings":"","what":"Stay safe and fast with the NCBI API key","title":"Speeding up the recovery of DNA barcodes","text":"additional parameter can supplied “externally”, allowing increase speed {r, echo = TRUE, eval = FALSE}get_ncbi_taxonomy function avoid blocking NCBI servers functions. mentioned , NCBI allows maximum three requests per second, limit respected default settings barcodeMineR package. However, higher download rate can adopted user decides register NCBI account. Using API key, user can send 10 requests per second NCBI. can done following rentrez documentation, specifically following function: setting NCBI account, user assures requests don’t take much time can executed even faster, avoid excessive blocking internet connection particularly unreliable. Including NCBI API key halves execution time {r, echo = TRUE, eval = FALSE}get_ncbi_taxonomy, querying multiple species .","code":"set_entrez_key(\"ABCD123\")"},{"path":"https://matteoce.github.io/barcodeMineR/articles/api_rate_barcodeMineR.html","id":"tuning-the-functions-arguments","dir":"Articles","previous_headings":"","what":"Tuning the functions’ arguments","title":"Speeding up the recovery of DNA barcodes","text":"Different arguments can tuned improve speed /reliability requests NCBI servers. include rate xml fasta downloads API rate. first one ","code":""},{"path":"https://matteoce.github.io/barcodeMineR/articles/intro_barcodeMineR.html","id":"the-barcodeminer-package","dir":"Articles","previous_headings":"","what":"The barcodeMineR package","title":"Introduction to the barcodeMineR package","text":"package allows query multiple taxonomic names NCBI BOLD repositories retrieve DNA barcodes associated metadata wanted marker. heavily relies bold rentrez packages rOpenSci, takes advantage asynchronous framework future package speed retrieval data NCBI, respecting API requests rate limit. final output data frame object modified following formatting requirements refdb package, cleaned mining duplicates, differences formats BOLD NCBI metadata (e.g. geographic coordinates, dates) commonly occurring issues derive downloading merging data two repositories. synthesis, provides unified framework mining DNA Barcodes main online genomic repositories, providing clean, metadata-rich sequences programmatic way interactively, depending wanted usage.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/articles/intro_barcodeMineR.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Introduction to the barcodeMineR package","text":"barcodeMineR package allows recover DNA barcodes vector taxonomic names. basic usage consists recovery taxonomic information first, followed download records available. function get_ncbi_taxonomy() exactly : Taxonomic information species Dissostichus mawsoni available NCBI taxonomy database, obtained data frame class object basic information regarding . object can used next command, retrieve DNA barcodes available corresponding species NCBI nucleotide database. One main features next function consists separating different CDS rRNA products accession number. can leave argument ask default (TRUE) wait asked choose CDS/rRNA select. now, leave FALSE, retain automatically CDS/rRNA features: Now final refdb formatted data frame including DNA barcodes available NCBI species Dissostichus mawsoni. data frame includes 189 records (rows). However, search Dissostichus mawsoni records NCBI nucleotide database, using default filters called inside barcodeMineR functions, notice less accession numbers number records obtained download_ncbi() function: package recovered every single DNA barcode/gene/product available accession numbers corresponding Dissostichus mawsoni, thus, example, accession number ‘LC138011.1’ obtained ND1 ND2 markers separate records refdb data frame. case want choose marker keep final tibble, set ask argument TRUE (default), , asked, choose marker download data : DNA barcodes 5’--3’ direction correct length defined INSDC location descriptor, ’ve extracted single fasta sequence accession number. procedure can applied using functions querying BOLD database, naming style. , ’re retrieving taxonomy information BOLD database species: output slightly different output get_ncbi_taxonomy(), however, serves role. fact, can used download Dissostichus mawsoni records BOLD database. retrieved 19 records BOLD database, corresponding 18 different process-IDs. BOLD hosts markers, vast majority records correspond Cytochrome c oxidase sequences.","code":"library(barcodeMineR)  # search taxonomic information for a species on the NCBI tax <- get_ncbi_taxonomy(\"Dissostichus mawsoni\") tax ##              queryName taxid    rank       scientificName   phylum       class ## 1 Dissostichus mawsoni 36200 species Dissostichus mawsoni Chordata Actinopteri ##         order        family        genus              species ## 1 Perciformes Nototheniidae Dissostichus Dissostichus mawsoni rec_NCBI <- download_ncbi(tax, ask = FALSE) ## # A tibble: 189 × 30 ##    recordID   markerCode DNA_seq  phylum class order family genus species source ##    <chr>      <chr>      <DNA>    <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>  ##  1 HM422302.1 COI        CTCTACT… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  2 ON000293.1 COX1       GCGCCTG… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  3 MK843765.1 COI        TCTCTAC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  4 DQ498816.1 Cytb       GCCACCC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  5 DQ498794.1 Rhod       GCCTACA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  6 MK500763.1 enc1       TCTGACG… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  7 MG729451.1 COI        GAACTTA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  8 KY656477.1 COI        GCCGGAA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  9 LC138011.1 ND1        ATGCTTT… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ## 10 LC138011.1 ND2        ATGAGCC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ## # ℹ 179 more rows ## # ℹ 20 more variables: lat <dbl>, lon <dbl>, lengthGene <int>, sampleID <chr>, ## #   QueryName <chr>, identified_by <chr>, taxNotes <lgl>, db_xref <chr>, ## #   sourceID <chr>, NCBI_ID <chr>, institutionStoring <lgl>, ## #   collected_by <chr>, collection_date <chr>, altitude <lgl>, depth <lgl>, ## #   country <chr>, directionPrimers <chr>, lengthSource <int>, ## #   PCR_primers <chr>, note <chr> # the default filters exclude whole genome shotgun sequences and transcribed shotgun assembly products rentrez::entrez_search(db=\"nucleotide\", term=\"(((txid36200[ORGN] NOT wgs[Keyword]) NOT tsa[Keyword]) AND biomol_genomic[PROP]) AND (cds[Feature key] OR rrna[Feature key])\") ## Entrez search result with 131 hits (object contains 20 IDs and no web_history object) ##  Search term (as translated):  (((txid36200[ORGN] NOT wgs[Keyword]) NOT tsa[Keywo ... rec_NCBI <- download_ncbi(tax) # search taxonomic information for a species on BOLD tax <- get_bold_taxonomy(\"Dissostichus mawsoni\") tax ##              queryName taxid                taxon    rank ## 1 Dissostichus mawsoni 77420 Dissostichus mawsoni species rec_BOLD <- download_bold(tax, ask = FALSE) rec_BOLD ## # A tibble: 19 × 30 ##    recordID    markerCode DNA_seq phylum class order family genus species source ##    <chr>       <chr>      <DNA>   <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>  ##  1 ANGBF23589… COI-5P     GCCGGA… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ##  2 ANGBF23590… COI-5P     GAACTT… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ##  3 ANTFI127-06 COI-5P     ------… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ##  4 ANTFI160-06 COI-5P     --TCTC… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ##  5 EATFR006-12 Rho        GGTGCC… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ##  6 EATFR006-12 COI-5P     ------… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ##  7 EMRKT082-07 COI-5P     NCTCTA… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ##  8 FNZ726-06   COI-5P     -CTCTA… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ##  9 FNZ727-06   COI-5P     -CTCTA… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 10 FNZ728-06   COI-5P     -CTCTA… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 11 FNZ969-07   COI-5P     TCTCTA… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 12 FNZC284-09  COI-5P     -CTCTA… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 13 GBMNA17173… COI-5P     GTGGCC… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 14 GBMNB8127-… COI-5P     TCTCTA… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 15 GBMNF47574… COI-5P     GCGCCT… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 16 OCARH832-12 COI-5P     --TCTC… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 17 OCARH904-12 COI-5P     --TCTC… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 18 OCARH973-12 COI-5P     --TCTC… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## 19 OCARH981-12 COI-5P     --TCTC… Chord… Acti… Perc… Notot… Diss… Dissos… BOLD   ## # ℹ 20 more variables: lat <dbl>, lon <dbl>, lengthGene <int>, sampleID <chr>, ## #   QueryName <chr>, identified_by <chr>, taxNotes <lgl>, db_xref <chr>, ## #   sourceID <chr>, NCBI_ID <chr>, institutionStoring <chr>, ## #   collected_by <chr>, collection_date <lgl>, altitude <int>, depth <int>, ## #   country <chr>, directionPrimers <chr>, lengthSource <int>, ## #   PCR_primers <chr>, note <chr>"},{"path":"https://matteoce.github.io/barcodeMineR/articles/intro_barcodeMineR.html","id":"merging-data-from-different-repositories","dir":"Articles","previous_headings":"","what":"Merging data from different repositories","title":"Introduction to the barcodeMineR package","text":"can now merge refdb data frames obtain single one. default behaviour next function check records mined repository return original record. needed, behaviour can switched setting argument resolve.conflicts FALSE: can see printed messages, records actually mined versions records obtained repository. removed checking original version downloaded opposite repository. , now barcodes available major online repositories species Dissostichus mawsoni. case want add additional, private sequences mined results, can use function loadBarcodeOre() specify either paths tsv file fasta file including new sequences, data frame DNAStringSet object , output refdb data frame formatted merged earlier. order , tsv file must include fields (.e. column names) included SEQ_01, ACRONYM, Chordata, Actinopteri, Perciformes, Nototheniidae, Dissostichus, Dissostichus mawsoni, 658, SAMPLE01, John Smith, NA, NA, NA, INSTITUTION, John Smith, 23-Aug-1992, NA, 300, Southern Ocean, -74.6789, 164.2315, F|R, newPrimF|newPrimR, NA object. can merge records ones mined online examine results:","code":"total <- mergeBarcodeOres(rec_NCBI, rec_BOLD) ## '5' records from BOLD were mined from the NCBI. ## If they are already represented by the NCBI barcodeOre they will be removed to avoid duplicates. ## '3' records from NCBI were mined from BOLD. ## If they are already represented by the BOLD barcodeOre they will be removed to avoid duplicates. ## Duplicated records obtained from the BOLD will be kept. total ## # A tibble: 200 × 30 ##    recordID   markerCode DNA_seq  phylum class order family genus species source ##    <chr>      <chr>      <DNA>    <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>  ##  1 ON000293.1 COX1       GCGCCTG… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  2 MK843765.1 COI        TCTCTAC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  3 DQ498816.1 Cytb       GCCACCC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  4 DQ498794.1 Rhod       GCCTACA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  5 MK500763.1 enc1       TCTGACG… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  6 MG729451.1 COI        GAACTTA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  7 KY656477.1 COI        GCCGGAA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  8 LC138011.1 ND1        ATGCTTT… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  9 LC138011.1 ND2        ATGAGCC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ## 10 LC138011.1 COI        GTGGCCA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ## # ℹ 190 more rows ## # ℹ 20 more variables: lat <dbl>, lon <dbl>, lengthGene <int>, sampleID <chr>, ## #   QueryName <chr>, identified_by <chr>, taxNotes <lgl>, db_xref <chr>, ## #   sourceID <chr>, NCBI_ID <chr>, institutionStoring <chr>, ## #   collected_by <chr>, collection_date <chr>, altitude <int>, depth <int>, ## #   country <chr>, directionPrimers <chr>, lengthSource <int>, ## #   PCR_primers <chr>, note <chr> rec <- barcodeMineR::example_record seq <- barcodeMineR::example_sequence  new_records <- loadBarcodeOre(rec, seq) new_records ## # A tibble: 1 × 30 ##   recordID markerCode DNA_seq     phylum class order family genus species source ##   <chr>    <chr>      <DNA>       <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>  ## 1 SEQ_01   COI        AAACTCAAAG… Chord… Acti… Perc… Notot… Diss… Dissos… ACRON… ## # ℹ 20 more variables: lat <dbl>, lon <dbl>, lengthGene <int>, sampleID <chr>, ## #   QueryName <chr>, identified_by <chr>, taxNotes <chr>, db_xref <chr>, ## #   sourceID <chr>, NCBI_ID <chr>, institutionStoring <chr>, ## #   collected_by <chr>, collection_date <chr>, altitude <chr>, depth <dbl>, ## #   country <chr>, directionPrimers <chr>, lengthSource <int>, ## #   PCR_primers <chr>, note <chr> total <- mergeBarcodeOres(total, new_records) ## No records were obtained from both the NCBI and BOLD total ## # A tibble: 201 × 30 ##    recordID   markerCode DNA_seq  phylum class order family genus species source ##    <chr>      <chr>      <DNA>    <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>  ##  1 ON000293.1 COX1       GCGCCTG… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  2 MK843765.1 COI        TCTCTAC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  3 DQ498816.1 Cytb       GCCACCC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  4 DQ498794.1 Rhod       GCCTACA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  5 MK500763.1 enc1       TCTGACG… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  6 MG729451.1 COI        GAACTTA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  7 KY656477.1 COI        GCCGGAA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  8 LC138011.1 ND1        ATGCTTT… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ##  9 LC138011.1 ND2        ATGAGCC… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ## 10 LC138011.1 COI        GTGGCCA… Chord… Acti… Perc… Notot… Diss… Dissos… NCBI   ## # ℹ 191 more rows ## # ℹ 20 more variables: lat <dbl>, lon <dbl>, lengthGene <int>, sampleID <chr>, ## #   QueryName <chr>, identified_by <chr>, taxNotes <chr>, db_xref <chr>, ## #   sourceID <chr>, NCBI_ID <chr>, institutionStoring <chr>, ## #   collected_by <chr>, collection_date <chr>, altitude <chr>, depth <dbl>, ## #   country <chr>, directionPrimers <chr>, lengthSource <int>, ## #   PCR_primers <chr>, note <chr>"},{"path":"https://matteoce.github.io/barcodeMineR/articles/intro_barcodeMineR.html","id":"analyzing-the-database","dir":"Articles","previous_headings":"","what":"Analyzing the database","title":"Introduction to the barcodeMineR package","text":"pre-formatted refdb data frame allows use functions package, including filtering operations, quality checks, examination taxonomic conflicts plotting functions. example, search taxonomic conflicts, use appropriate function refdb package: observed output, appears nomenclature ray-finned fishes different BOLD NCBI taxonomies (Actinopteri vs Actinopterygii). can also filter records based length sequences. Although retain information lengthGene field, refdb package directly calculates using refdb_filter_seq_length() function. Let’s say want know many records correspond maximum 658 base pairs (bp) length: total 91 records include sequences 658 bp length. However, many records results much shorter length:  fact, many records extracted complete mitochondrial genomes, can readily inspected using one plotting functions barcodeMineR package:  shown, original length fasta sequence records much longer final result obtained barcodeMineR package. information retrieved record, can see many records include primers used amplify sequence another plotting function barcodeMineR package:  can also map records available geographical coordinates using refdb package: records geographical coordinates final merged table. basic usage barcodeMineR package. Now can check speed recovery records NCBI database looking vignette(\"Speeding recovery NCBI records\") vignette.","code":"library(refdb)  refdb_check_tax_conflict(total) ## $phylum ## # A tibble: 0 × 2 ## # ℹ 2 variables: Taxon <chr>, Taxonomy <???> ##  ## $class ## # A tibble: 0 × 2 ## # ℹ 2 variables: Taxon <chr>, Taxonomy <???> ##  ## $order ## # A tibble: 2 × 2 ##   Taxon       Taxonomy                  ##   <chr>       <chr>                     ## 1 Perciformes Chordata > Actinopteri    ## 2 Perciformes Chordata > Actinopterygii ##  ## $family ## # A tibble: 2 × 2 ##   Taxon         Taxonomy                                ##   <chr>         <chr>                                   ## 1 Nototheniidae Chordata > Actinopteri > Perciformes    ## 2 Nototheniidae Chordata > Actinopterygii > Perciformes ##  ## $genus ## # A tibble: 2 × 2 ##   Taxon        Taxonomy                                                ##   <chr>        <chr>                                                   ## 1 Dissostichus Chordata > Actinopteri > Perciformes > Nototheniidae    ## 2 Dissostichus Chordata > Actinopterygii > Perciformes > Nototheniidae ##  ## $species ## # A tibble: 2 × 2 ##   Taxon                Taxonomy                                                  ##   <chr>                <chr>                                                     ## 1 Dissostichus mawsoni Chordata > Actinopteri > Perciformes > Nototheniidae > D… ## 2 Dissostichus mawsoni Chordata > Actinopterygii > Perciformes > Nototheniidae … total_filt <- refdb_filter_seq_length(total, max_len = 658) refdb_plot_seqlen_hist(total_filt) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. plot_length(total_filt) plot_primers(total_filt) refdb_plot_map(total)"},{"path":"https://matteoce.github.io/barcodeMineR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cecchetto M (2024). barcodeMineR: Fast reliable mining DNA Barcodes NCBI BOLD. R package version 0.1.0, https://matteoce.github.io/barcodeMineR/, https://github.com/MatteoCe/barcodeMineR.","code":"@Manual{,   title = {barcodeMineR: Fast and reliable mining of DNA Barcodes from the NCBI and BOLD},   author = {Matteo Cecchetto},   year = {2024},   note = {R package version 0.1.0, https://matteoce.github.io/barcodeMineR/},   url = {https://github.com/MatteoCe/barcodeMineR}, }"},{"path":"https://matteoce.github.io/barcodeMineR/index.html","id":"barcodeminer-","dir":"","previous_headings":"","what":"Fast and reliable mining of DNA Barcodes from the NCBI and BOLD","title":"Fast and reliable mining of DNA Barcodes from the NCBI and BOLD","text":"goal barcodeMineR facilitate download DNA sequences NCBI BOLD repositories, taking advantage future asynchronous framework speed operations respecting API requests limits. outputs refdb object.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast and reliable mining of DNA Barcodes from the NCBI and BOLD","text":"package still development, can install version barcodeMineR, directly GitHub repository, using Bioconductor package: installation might require update various packages, may fail. necessarily issue, thus can proceed nonetheless.","code":"BiocManager::install(\"MatteoCe/barcodeMineR\")"},{"path":"https://matteoce.github.io/barcodeMineR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Fast and reliable mining of DNA Barcodes from the NCBI and BOLD","text":"first step consists loading package: Take look vignette information details!","code":"library(barcodeMineR)"},{"path":"https://matteoce.github.io/barcodeMineR/index.html","id":"to-do","dir":"","previous_headings":"","what":"TO DO","title":"Fast and reliable mining of DNA Barcodes from the NCBI and BOLD","text":"Check sequence extract method buildSequences. location descriptor INSDC include start end location unknown position (example, “<345..500”), function extract sequence using first end position whole sequence instead unknown position include last/first known position ? (345 position mentioned example). example problem arising, try downloading CDS records corresponding Ophthalmolycus amberensis (specifically acc num ON417737.1 CDS CYTB), acc num KX362346.1 muts CDS species Notisis elongata. Another issue related problem can seen accession number “JN034583.1” species Dissostichus mawsoni, different portions “immunoglobulin M heavy chain” separated exons. Remove field lengthGene? might purpose, considering sequence refdb object can modified using refdb package functions. Change default api_rate ncbi functions 3 2.8, slow requests might build 4 per seconds slow internet connections. Change default ask argument TRUE FALSE bold ncbi functions?","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_Taxon_extract_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nodes from an NCBI taxonomy xml object. — XML_Taxon_extract_nodes","title":"Extract nodes from an NCBI taxonomy xml object. — XML_Taxon_extract_nodes","text":"Similar function XML_extract_nodes, works NCBI taxonomy xml.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_Taxon_extract_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nodes from an NCBI taxonomy xml object. — XML_Taxon_extract_nodes","text":"","code":"XML_Taxon_extract_nodes(xml)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_Taxon_extract_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nodes from an NCBI taxonomy xml object. — XML_Taxon_extract_nodes","text":"xml \"XMLInternalDocument\", \"XMLAbstractDocument\" class object.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_Taxon_extract_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nodes from an NCBI taxonomy xml object. — XML_Taxon_extract_nodes","text":"xml 'XMLNodeSet' class.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract GBFeature data from an NCBI xml node object. — XML_extract","title":"Extract GBFeature data from an NCBI xml node object. — XML_extract","text":"function extract different data xml file obtained NCBI. xml corresponding particular feature entire xml obtained NCBI specific accession number must supplied, thus may GBFeature corresponding Source, CDS rRNA. function accepts three cases (chosen argument \"path\") \"accession\" (extraction accession number), \"location\" (extraction position sequence entire sequence) \"qualifier\" (used extract information source key feature). quals argument used specify different metadata user want extract source feature key xml file supplied like \"organism\", collected_by\".","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract GBFeature data from an NCBI xml node object. — XML_extract","text":"","code":"XML_extract(xml, path, quals = NULL)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract GBFeature data from an NCBI xml node object. — XML_extract","text":"xml xml 'XMLNodeSet' class obtained ncbi_xml_fetcher (db = 'nucleotide'). path One 'accession', 'location' 'qualifier'. parameter determine type output generated. quals path set 'qualifier' 'location', determines qualifiers extracted xml object. chosen path 'location' must one '' ''.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract GBFeature data from an NCBI xml node object. — XML_extract","text":"Either string text accession number (path = 'accession') location definition (path = 'location'), named list qualifiers extracted GBFeature NCBI xml object.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_extract_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nodes from an NCBI nucleotide xml object. — XML_extract_nodes","title":"Extract nodes from an NCBI nucleotide xml object. — XML_extract_nodes","text":"Supported feature keys \"source\", \"CDS\" \"rRNA\".","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_extract_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nodes from an NCBI nucleotide xml object. — XML_extract_nodes","text":"","code":"XML_extract_nodes(featureKey, xml)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_extract_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nodes from an NCBI nucleotide xml object. — XML_extract_nodes","text":"featureKey feature key extract. Currently, \"source\", \"CDS\" \"rRNA\" supported. xml \"XMLInternalDocument\", \"XMLAbstractDocument\" class object.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_extract_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nodes from an NCBI nucleotide xml object. — XML_extract_nodes","text":"xml 'XMLNodeSet' class.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_root.html","id":null,"dir":"Reference","previous_headings":"","what":"Append root of XML to new xml doc. — XML_root","title":"Append root of XML to new xml doc. — XML_root","text":"Append root XML new xml doc.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append root of XML to new xml doc. — XML_root","text":"","code":"XML_root(xml)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append root of XML to new xml doc. — XML_root","text":"xml XML object fetched using ncbi_xml_fetcher","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/XML_root.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append root of XML to new xml doc. — XML_root","text":"new xml object without original root.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ask_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Ask the user to interactively chose which values of a tables' column to retain from a table. — ask_user","title":"Ask the user to interactively chose which values of a tables' column to retain from a table. — ask_user","text":"function used let user filter data.frame based values column","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ask_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ask the user to interactively chose which values of a tables' column to retain from a table. — ask_user","text":"","code":"ask_user(df, field, ask = TRUE)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ask_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ask the user to interactively chose which values of a tables' column to retain from a table. — ask_user","text":"df data.frame filtered. field column name extract values . must character string.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ask_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ask the user to interactively chose which values of a tables' column to retain from a table. — ask_user","text":"filtered data.frame.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/attempts_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Define errors and warnings and choose proper repeating scheme accordingly. — attempts_handler","title":"Define errors and warnings and choose proper repeating scheme accordingly. — attempts_handler","text":"Define errors warnings choose proper repeating scheme accordingly.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/attempts_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define errors and warnings and choose proper repeating scheme accordingly. — attempts_handler","text":"","code":"attempts_handler(input, attempts)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/attempts_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define errors and warnings and choose proper repeating scheme accordingly. — attempts_handler","text":"input warning/error captured tryCatch withCallingHandlers attempts current number attempts computed connection_handler","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/attempts_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define errors and warnings and choose proper repeating scheme accordingly. — attempts_handler","text":"number defining correct attempts value","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/barcodeMineR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"barcodeMineR: Fast and reliable mining of DNA Barcodes from the NCBI and BOLD — barcodeMineR-package","title":"barcodeMineR: Fast and reliable mining of DNA Barcodes from the NCBI and BOLD — barcodeMineR-package","text":"package allows query multiple taxonomic names NCBI BOLD repositories retrieve DNA barcodes associated metadata wanted marker. heavily relies bold rentrez packages rOpenSci, takes advantages parallelizing framework future package speed retrieval data NCBI, respecting API requests limit. final output tibble object modified following formatting requirements refdb package, cleaned mining duplicates, differences formats BOLD NCBI metadata (e.g. geographic coordinates, dates) commonly occurring issues derive downloading data repositories. synthesis, provides unified framework mining DNA Barcodes main repositories, roviding clean, metadata-rich sequences programmatic way interactively, depending wanted usage.","code":""},{"path":[]},{"path":"https://matteoce.github.io/barcodeMineR/reference/boldDuplicateCheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove BOLD records if the corresponding, mined NCBI records are present — boldDuplicateCheck","title":"Remove BOLD records if the corresponding, mined NCBI records are present — boldDuplicateCheck","text":"Remove BOLD records corresponding, mined NCBI records present","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/boldDuplicateCheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove BOLD records if the corresponding, mined NCBI records are present — boldDuplicateCheck","text":"","code":"boldDuplicateCheck(refdb)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/boldDuplicateCheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove BOLD records if the corresponding, mined NCBI records are present — boldDuplicateCheck","text":"refdb refdb object","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/boldDuplicateCheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove BOLD records if the corresponding, mined NCBI records are present — boldDuplicateCheck","text":"refdb object","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_fetcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Download records from the BOLD database — bold_fetcher","title":"Download records from the BOLD database — bold_fetcher","text":"Download records BOLD database","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_fetcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download records from the BOLD database — bold_fetcher","text":"","code":"bold_fetcher(taxon_group, bold_count, bold_tax)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_fetcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download records from the BOLD database — bold_fetcher","text":"taxon_group taxonomic names bold_tax data.frame output get_bold_taxonomy bold_counts data.frame output bold_record_grouper","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_fetcher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download records from the BOLD database — bold_fetcher","text":"data.frame","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_record_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the taxa with records on bold — bold_record_counter","title":"Select the taxa with records on bold — bold_record_counter","text":"Select taxa records bold","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_record_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the taxa with records on bold — bold_record_counter","text":"","code":"bold_record_counter(bold_tax, api_rate)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_record_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the taxa with records on bold — bold_record_counter","text":"bold_tax data.frame output get_bold_taxonomy api_rate api_rate set download_bold","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_record_counter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the taxa with records on bold — bold_record_counter","text":"data.frame taxa represented least 1 record bold","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_record_grouper.html","id":null,"dir":"Reference","previous_headings":"","what":"Group taxonomic names by maximum cumulative value — bold_record_grouper","title":"Group taxonomic names by maximum cumulative value — bold_record_grouper","text":"Group taxonomic names maximum cumulative value","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_record_grouper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group taxonomic names by maximum cumulative value — bold_record_grouper","text":"","code":"bold_record_grouper(bold_count, bold_tax, rate)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_record_grouper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group taxonomic names by maximum cumulative value — bold_record_grouper","text":"bold_count data.frame output bold_record_counter function bold_tax data.frame output get_bold_taxonomy function rate maximum number records group","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/bold_record_grouper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group taxonomic names by maximum cumulative value — bold_record_grouper","text":"list character vectors","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildBarcodeOre.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a refdb from the final records data.frame — buildBarcodeOre","title":"Create a refdb from the final records data.frame — buildBarcodeOre","text":"Create refdb final records data.frame","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildBarcodeOre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a refdb from the final records data.frame — buildBarcodeOre","text":"","code":"buildBarcodeOre(records, prefix = NULL)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildBarcodeOre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a refdb from the final records data.frame — buildBarcodeOre","text":"records records data.frame, obtained \"download\" functions. prefix prefix use case custom IDs chosen user instead original processID/accession numbers","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildBarcodeOre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a refdb from the final records data.frame — buildBarcodeOre","text":"refdb data.frame","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Update record information with DNA sequence data coming from the buildSequences script. — buildRecord","title":"Update record information with DNA sequence data coming from the buildSequences script. — buildRecord","text":"used buildSequences calculates final length marker. extracts info chose accession number marker combination adds gene_name final length sequence. difference depending origin records, whether come search BOLD records NCBI records. former, information obtained fetching sample data may unequivocally selected using sourceID, especially cases sourceID different sequences (16S COI CDS coming source sequence NCBI). case, records must selected sourceID markerCode altogether already available records table. Instead, NCBI records can selected sourceID, , considering rest information unique, possible duplicate rows selected data.frame can removed dataframe single row.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update record information with DNA sequence data coming from the buildSequences script. — buildRecord","text":"","code":"buildRecord(accn, records, sequences)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update record information with DNA sequence data coming from the buildSequences script. — buildRecord","text":"accn string form \"accession number|marked code\". records record table. sequences DNA sequences format \"DNAStringSet\".","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update record information with DNA sequence data coming from the buildSequences script. — buildRecord","text":"data.frame, information updated based additional information \"built\" sequences.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildSequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and process chosen sequences based on the NCBI location qualifiers. — buildSequences","title":"Clean and process chosen sequences based on the NCBI location qualifiers. — buildSequences","text":"used vectorized loop (like lapply) \"accession number|marker code\" chosen selection process. function select correct sequences total obtained select_ncbi_genes.R download_ncbi_genes.R , necessary, cut correct region sequence corresponding chosen CDS rRNA. also used inside \"select_bold_genes\" function. case, script simply select extract \"accn\" previously selected whole sequences gathered beginning selection script remove gaps, present.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildSequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and process chosen sequences based on the NCBI location qualifiers. — buildSequences","text":"","code":"buildSequences(accn, DNAString, selection_tab)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildSequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and process chosen sequences based on the NCBI location qualifiers. — buildSequences","text":"accn string form \"accession number|marked code\". DNAString DNA sequences format \"DNAStringSet\" selection_tab selection tab created \"extractSelectionTab\"","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/buildSequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and process chosen sequences based on the NCBI location qualifiers. — buildSequences","text":"list \"DNAStringSet\" objects corresponding DNA sequences trimmed indicated relative location qualifiers selection tab.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/cleanMinedFromGenBankRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean duplicate BOLD records that were mined from the NCBI multiple times — cleanMinedFromGenBankRecords","title":"Clean duplicate BOLD records that were mined from the NCBI multiple times — cleanMinedFromGenBankRecords","text":"convenient function allows cleaning duplicate BOLD records mined NCBI multiple times thus different processID. cases, accession numbers records reports , thus original NCBI record searched using different utils functions listed utils_helpers.R search records check length original CDS/rRNA. Create, records object, new table includes two new columns one corresponding combination processID gene name also supplied function accn, another corresponding accession number. latter created using coalesce function dplyr allows merge two vectors, case columns table, replacing NA items corresponding value, present, column. Important remember coalesce works giving preference first vector supplied, thus columns present value one coming column NCBI_ID used instead . allows recover accession numbers present correct field record mined Genbank instead sampleID field. lengthGene field quickly calculated using sequences supplied function. Moreover, records BOLD sequence associated. removed beforehand.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/cleanMinedFromGenBankRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean duplicate BOLD records that were mined from the NCBI multiple times — cleanMinedFromGenBankRecords","text":"","code":"cleanMinedFromGenBankRecords(records, sequences, accn)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/cleanMinedFromGenBankRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean duplicate BOLD records that were mined from the NCBI multiple times — cleanMinedFromGenBankRecords","text":"records data.frame output bold fetcher format sequences DNAStringSet sequences corresponding records table, DNAStringSet format names character vector processID corresponding marker codes selected prevously user","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/cleanMinedFromGenBankRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean duplicate BOLD records that were mined from the NCBI multiple times — cleanMinedFromGenBankRecords","text":"character parameter name, including correct mined record","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/clean_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse query names that corresponds to the same taxonomy on the ncbi. — clean_taxonomy","title":"Collapse query names that corresponds to the same taxonomy on the ncbi. — clean_taxonomy","text":"Sometimes may happen different taxonomic names correspond one name ncbi. collapse rows different query names single one \"name1|name2\" field \"QueryName\".","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/clean_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse query names that corresponds to the same taxonomy on the ncbi. — clean_taxonomy","text":"","code":"clean_taxonomy(taxonomy_df)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/clean_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse query names that corresponds to the same taxonomy on the ncbi. — clean_taxonomy","text":"taxonomy_df ncbi taxonomy table obtained get_ncbi_taxonomy.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/clean_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse query names that corresponds to the same taxonomy on the ncbi. — clean_taxonomy","text":"taxonomy table duplicates collapsed.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/connection_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat failing functions and manage errors. — connection_handler","title":"Repeat failing functions and manage errors. — connection_handler","text":"Repeat failing functions manage errors.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/connection_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat failing functions and manage errors. — connection_handler","text":"","code":"connection_handler(fun, attempts = 5)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/connection_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat failing functions and manage errors. — connection_handler","text":"fun function supplied ncbi_limit_handler. attempts number times repeat function stopping loop.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/connection_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat failing functions and manage errors. — connection_handler","text":"result function provided.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/download_bold.html","id":null,"dir":"Reference","previous_headings":"","what":"Download records from BOLD — download_bold","title":"Download records from BOLD — download_bold","text":"short description...","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/download_bold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download records from BOLD — download_bold","text":"","code":"download_bold(bold_tax, rate = 100, api_rate = NULL, ask = TRUE, prefix = NULL)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/download_bold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download records from BOLD — download_bold","text":"bold_tax data.frame, returned get_bold_taxonomy function. rate numeric, number taxonomic names grouping. queried time. api_rate numeric, timing rate send requests. function, defaults NULL always set 1, one request per second, due incompatibility bold functions future parallelizing framework. ask logical, defaults TRUE. disabled selection process skipped feature keys accession number retrieved. prefix character, defaults NULL. defaults NULL. Character string used create numbered custom ids record ascending order.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/download_bold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download records from BOLD — download_bold","text":"refdb tibble data.frame, including DNA sequence field.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/download_ncbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Download records from the NCBI — download_ncbi","title":"Download records from the NCBI — download_ncbi","text":"short description...","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/download_ncbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download records from the NCBI — download_ncbi","text":"","code":"download_ncbi(   ncbi_tax = NULL,   ncbi_ids = NULL,   rate_xml = 200,   rate_fasta = 100,   default.filter = TRUE,   filter = NULL,   api_rate = NULL,   ask = TRUE,   prefix = NULL )"},{"path":"https://matteoce.github.io/barcodeMineR/reference/download_ncbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download records from the NCBI — download_ncbi","text":"ncbi_tax data.frame, returned get_ncbi_taxonomy function. ncbi_ids character vector including ncbi accession numbers. rate_xml number xml downloaded time. Defaults 200, can lowered bad internet connections. rate_fasta number fasta sequences downloaded time. rate_xml, defaults 100. Many fasta can correspond mitogenomes chromosomes, may lead error downloaded great numbers. Can increased needed. default.filter logical, whether filter records excluding whole genome shotgun sequences transcribed shotgun assembly. Defaults TRUE. filter additional query filter form /multiple string/s add every searched taxid. allow user specifically filter every search custom query. Multiple strings provided form character vector single query filters (see description details). api_rate time rate adopted request sent NCBI. Defaults NULL, let function check whether key parameter also NULL . former case, api rate set request every 1/3 seconds, otherwise every 1/10 seconds. Works multisession future plan. Check \"Description\" information. ask defaults TRUE. disabled selection process skipped feature keys accession number retrieved. prefix defaults NULL. Character string used create numbered custom ids record ascending order.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/download_ncbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download records from the NCBI — download_ncbi","text":"refdb tibble data.frame, including DNA sequence field.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractRecordsTab.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract records table from a list of xml source features. — extractRecordsTab","title":"Extract records table from a list of xml source features. — extractRecordsTab","text":"Similar \"extractSelectionTab\", function allows extract record information list XML source features. taxonomic table, obtained get_ncbi_taxonomy inspected taxonomic names.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractRecordsTab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract records table from a list of xml source features. — extractRecordsTab","text":"","code":"extractRecordsTab(feature_nodes, taxonomic_table)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractRecordsTab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract records table from a list of xml source features. — extractRecordsTab","text":"feature_nodes list xml source features. taxonomic_table taxonomic table obtained get_ncbi_taxonomy function.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractRecordsTab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract records table from a list of xml source features. — extractRecordsTab","text":"data.frame source data xml source features, thus metadata reported corresponding accession number.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractRecordsTabBOLD.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract records table from the output of bold::bold_seqspec — extractRecordsTabBOLD","title":"Extract records table from the output of bold::bold_seqspec — extractRecordsTabBOLD","text":"function similar extractRecordsTab, thus allowing extract records information, output bold_fetcher function, gives \"tsv-formatted\" records table, easily processable create records tab format used . taxonomic table, obtained get_bold_taxonomy inspected extract solely BOLD taxid specific species processed iteration.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractRecordsTabBOLD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract records table from the output of bold::bold_seqspec — extractRecordsTabBOLD","text":"","code":"extractRecordsTabBOLD(bold_records, bold_tax)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractRecordsTabBOLD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract records table from the output of bold::bold_seqspec — extractRecordsTabBOLD","text":"bold_records data.frame output bold::bold_seqspec bold_tax data.frame output get_bold_taxonomy","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractRecordsTabBOLD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract records table from the output of bold::bold_seqspec — extractRecordsTabBOLD","text":"data.frame records_tab selected columns","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractSelectionTab.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract selection table from a list of xml CDS and rRNA features. — extractSelectionTab","title":"Extract selection table from a list of xml CDS and rRNA features. — extractSelectionTab","text":"function process list feature XML objects order create selection tab, table later allow choose CDS rRNA keep accession numbers gathered. works lapply function iteratively extract data.frame-like objects CDS rRNA.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractSelectionTab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract selection table from a list of xml CDS and rRNA features. — extractSelectionTab","text":"","code":"extractSelectionTab(feature_nodes, accn)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractSelectionTab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract selection table from a list of xml CDS and rRNA features. — extractSelectionTab","text":"feature_nodes list xml CDS rRNA features. accn character vector accession number, recovered using extractRecordsTab","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractSelectionTab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract selection table from a list of xml CDS and rRNA features. — extractSelectionTab","text":"data.frame counting number CDS rRNA features.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractTaxonomyTab.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract taxonomic data from an NCBI xml node object. — extractTaxonomyTab","title":"Extract taxonomic data from an NCBI xml node object. — extractTaxonomyTab","text":"Works similarly XML_extract. named list taxid, taxonomic rank, scientific name, phylum, class, order, family, genus species returned.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractTaxonomyTab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract taxonomic data from an NCBI xml node object. — extractTaxonomyTab","text":"","code":"extractTaxonomyTab(feature_nodes)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractTaxonomyTab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract taxonomic data from an NCBI xml node object. — extractTaxonomyTab","text":"feature_nodes xml 'XMLNodeSet' class obtained ncbi_xml_fetcher (db = 'taxonomy').","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/extractTaxonomyTab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract taxonomic data from an NCBI xml node object. — extractTaxonomyTab","text":"named list","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_bold_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomic classification of the BOLD taxonomy database for a list of taxa. — get_bold_taxonomy","title":"Get taxonomic classification of the BOLD taxonomy database for a list of taxa. — get_bold_taxonomy","text":"Due functioning bold package, random number generation might set warning messages function performed multisession plan. reason, seed parameter future::future function called internally set NULL, order suppress warnings.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_bold_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomic classification of the BOLD taxonomy database for a list of taxa. — get_bold_taxonomy","text":"","code":"get_bold_taxonomy(ids, group = 1, descend = TRUE, api_rate = 0.06, ask = TRUE)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_bold_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomic classification of the BOLD taxonomy database for a list of taxa. — get_bold_taxonomy","text":"ids character vector species names group grouping factor ids names. Defaults 10. descend logical. set TRUE (default), use taxize package retrieve lower level taxonomies. api_rate rate perform function element. BOLD api can higher, thus defined number workers available chosen future framework, unless specified otherwise ask function ask user whether filter final output taxonomic ranks. Default TRUE.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_bold_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomic classification of the BOLD taxonomy database for a list of taxa. — get_bold_taxonomy","text":"data.frame taxid taxonomy database BOLD website corresponding species name(s) retrieved","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_bold_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxonomic classification of the BOLD taxonomy database for a list of taxa. — get_bold_taxonomy","text":"","code":"if (FALSE) { (x <- c(\"Achelia assimilis\", \"Alcyonium antarcticum\")) get_bold_taxonomy(x) }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_lower_tax_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lower taxonomic level from input — get_lower_tax_rank","title":"Get lower taxonomic level from input — get_lower_tax_rank","text":"Get lower taxonomic level input","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_lower_tax_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lower taxonomic level from input — get_lower_tax_rank","text":"","code":"get_lower_tax_rank(tax)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_lower_tax_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lower taxonomic level from input — get_lower_tax_rank","text":"tax","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_lower_tax_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lower taxonomic level from input — get_lower_tax_rank","text":"character vector","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_ncbi_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomic classification of the NCBI taxonomy database for a list of taxa or taxid. — get_ncbi_taxonomy","title":"Get taxonomic classification of the NCBI taxonomy database for a list of taxa or taxid. — get_ncbi_taxonomy","text":"function first step pipeline. allows download taxonomic classification either taxonomic names taxid NCBI. character vector either type must supplied ids parameter. api_rate parameter can left NULL, default, allowing function automatically detect best option related current future plan NCBI http requests limit. fact, key also left NULL, standard https requests limit adopted (3 requests 1 second window), whereas NCBI API key provided, 10 requests per second performed. speed recovery data NCBI, especially time-consuming requests. future plan framework allows send requests every 1 / api_rate seconds, thus ensuring 'api_rate' requests sent. However, due fluctuations internet connection, still number requests arrive NCBI server, causing errors. function can handle 5 consecutive errors per request, many errors might block whole process. Apart reducing number taxonomic names taxid searched, api_rate parameter can modified order slow requests sent per second. overrides automatic selection optimal parameter (either 3 10) accepts one decimal degree number 1.0 10.0, internet connection particularly bad, can set 2.5/2.0, example, order slow number requests per second reduce possibility errors.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_ncbi_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomic classification of the NCBI taxonomy database for a list of taxa or taxid. — get_ncbi_taxonomy","text":"","code":"get_ncbi_taxonomy(ids, rate = 200, api_rate = NULL, ask = TRUE)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_ncbi_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomic classification of the NCBI taxonomy database for a list of taxa or taxid. — get_ncbi_taxonomy","text":"ids Character string species names taxid NCBI. rate number maximum ids show esearch list object. api_rate rate perform function element. Must number 3 10 translate rate '1 / api_rate' seconds. ask function ask user whether filter final output taxonomic ranks. Default TRUE.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_ncbi_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomic classification of the NCBI taxonomy database for a list of taxa or taxid. — get_ncbi_taxonomy","text":"data.frame object searched taxonomic classification.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/get_ncbi_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxonomic classification of the NCBI taxonomy database for a list of taxa or taxid. — get_ncbi_taxonomy","text":"","code":"if (FALSE) { get_ncbi_taxonomy(\"Polymastia invaginata\")  get_ncbi_taxonomy(\"283554\")  }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/loadBarcodeOre.html","id":null,"dir":"Reference","previous_headings":"","what":"Load sequences and corresponding records as a refdb object — loadBarcodeOre","title":"Load sequences and corresponding records as a refdb object — loadBarcodeOre","text":"Load sequences corresponding records refdb object","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/loadBarcodeOre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load sequences and corresponding records as a refdb object — loadBarcodeOre","text":"","code":"loadBarcodeOre(pathToRecords, pathToSequences, prefix = NULL)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/loadBarcodeOre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load sequences and corresponding records as a refdb object — loadBarcodeOre","text":"pathToRecords character string path (file name working directory) leading strictly \"tsv file\" records information. pathToSequences character string path (file name working directory) leading fasta file sequences corresponding record. prefix defaults NULL. Character string used create numbered custom ids record ascending order.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/loadBarcodeOre.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load sequences and corresponding records as a refdb object — loadBarcodeOre","text":"(refdb-class) refdb object created download_* functions.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/loadBarcodeOre.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load sequences and corresponding records as a refdb object — loadBarcodeOre","text":"","code":"if (FALSE) { myBO <- loadBarcodeOre(\"path/to/table.tsv\", \"path/to/sequences.fasta\") }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/mergeBarcodeOres.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge multiple refdb objects to create a single one. — mergeBarcodeOres","title":"Merge multiple refdb objects to create a single one. — mergeBarcodeOres","text":"Merge multiple refdb objects create single one.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/mergeBarcodeOres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge multiple refdb objects to create a single one. — mergeBarcodeOres","text":"","code":"mergeBarcodeOres(..., resolve.conflicts = TRUE)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/mergeBarcodeOres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge multiple refdb objects to create a single one. — mergeBarcodeOres","text":"... number refdb objects. resolve.conflicts (default = TRUE) set FALSE, script merge refdb objects different sources without quality control steps. left default settings, used perform basic quality control step required refdb objects obtained pipeline analysis searched species NCBI BOLD databases. Records databases.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/mergeBarcodeOres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge multiple refdb objects to create a single one. — mergeBarcodeOres","text":"refdb object, including records sequences refdb objects provided arguments.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/mergeBarcodeOres.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge multiple refdb objects to create a single one. — mergeBarcodeOres","text":"","code":"if (FALSE) { (totBO <- mergeBarcodeOres(ncbiBO, boldBO, customBO, resolve.conflicts = TRUE))  }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbiDuplicateCheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NCBI records if the corresponding, mined BOLD records are present — ncbiDuplicateCheck","title":"Remove NCBI records if the corresponding, mined BOLD records are present — ncbiDuplicateCheck","text":"Remove NCBI records corresponding, mined BOLD records present","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbiDuplicateCheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NCBI records if the corresponding, mined BOLD records are present — ncbiDuplicateCheck","text":"","code":"ncbiDuplicateCheck(refdb)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbiDuplicateCheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NCBI records if the corresponding, mined BOLD records are present — ncbiDuplicateCheck","text":"refdb refdb object","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbiDuplicateCheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NCBI records if the corresponding, mined BOLD records are present — ncbiDuplicateCheck","text":"refdb object","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_fasta_fetcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch fasta sequences from the NCBI 'nucleotide' database — ncbi_fasta_fetcher","title":"Fetch fasta sequences from the NCBI 'nucleotide' database — ncbi_fasta_fetcher","text":"similar ncbi_xml_fetcher, except retrieves fasta sequences.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_fasta_fetcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch fasta sequences from the NCBI 'nucleotide' database — ncbi_fasta_fetcher","text":"","code":"ncbi_fasta_fetcher(searchWebHist = NULL, ids = NULL, retstart, rate)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_fasta_fetcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch fasta sequences from the NCBI 'nucleotide' database — ncbi_fasta_fetcher","text":"searchWebHist web_history object. ids character vector accession/GI ids. retstart initial numeric position ids included web_history object fetched. web_history objects 1 ids , 'NULL' preferable 0. rate final numeric position ids included web_history object fetched. key user NCBI API key. allows run 10 requests per second.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_fasta_fetcher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch fasta sequences from the NCBI 'nucleotide' database — ncbi_fasta_fetcher","text":"character string fasta sequence/s.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_fasta_fetcher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch fasta sequences from the NCBI 'nucleotide' database — ncbi_fasta_fetcher","text":"","code":"if (FALSE) {  search <- ncbi_searcher(\"360011\", db = \"nucleotide\")  fetch <- ncbi_fasta_fetcher(search$web_history, retstart = 0, rate = 20) }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_id_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ids from an esearch objects list. — ncbi_id_extract","title":"Extract ids from an esearch objects list. — ncbi_id_extract","text":"Searching esearch ncbi database give web_history objects ids. However, number hits corresponding \"search\" may exceed retrieved number ids, based chosen retstart retmax (paramete rate_xml). run entrez_summary order retrieve ids esearch object.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_id_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ids from an esearch objects list. — ncbi_id_extract","text":"","code":"ncbi_id_extract(search_list, db = \"nucleotide\", rate_xml, api_rate = NULL)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_id_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ids from an esearch objects list. — ncbi_id_extract","text":"search_list output function ncbi_searcher db database ids searched. rate_xml number xml downloaded time. api_rate time rate adopted request sent NCBI.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_id_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract ids from an esearch objects list. — ncbi_id_extract","text":"list character vectors ncbi IDs used function postAndCheck creating web_history objects.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_limit_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Run function on a list/vector of elements following a specific timing in a future framework. — ncbi_limit_handler","title":"Run function on a list/vector of elements following a specific timing in a future framework. — ncbi_limit_handler","text":"function allows run another function future (future::future()) object. current future plan \"sequential\" (every 'normal' condition NON-parallelization), element list/vector elements parameter. , hand, future plan previously set \"multisession\", function applied element sent background future object stored list, allowing apply function multiple elements 1 / api_rate seconds. elements processed fun, future::value extract results return list. allows user adopt wanted future plan, eventually allowing speed analyses dynamic parallelization respects http requests limit imposed NCBI. function also implements function connection_handler allows repeat function connection error.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_limit_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run function on a list/vector of elements following a specific timing in a future framework. — ncbi_limit_handler","text":"","code":"ncbi_limit_handler(   data,   api_rate = 3,   fun,   message = \"LoremIpsum\",   seed = FALSE )"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_limit_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run function on a list/vector of elements following a specific timing in a future framework. — ncbi_limit_handler","text":"data list/vector whose elements provided function 'fun' parameter. api_rate rate perform function element. Must number 3 10 translate rate '1 / api_rate' seconds. fun function run element list/vector 'elements' parameter. message message print progress bar. seed due functioning bold package, allows ignore random number generation warnings future package. Keep FALSE (default future::future function) cases","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_limit_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run function on a list/vector of elements following a specific timing in a future framework. — ncbi_limit_handler","text":"result function provided fun parameter.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_limit_handler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run function on a list/vector of elements following a specific timing in a future framework. — ncbi_limit_handler","text":"","code":"if (FALSE) { ids <- c(\"Polymastia invaginata\", \"Aglaophamus trissophyllus\", \"Hastingsia gracilis\")  ncbi_limit_handler(ids, api_rate = 3, function(id){ ncbi_searcher(id, \"taxonomy\") }) }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_searcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Search a taxon or taxid in the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_searcher","title":"Search a taxon or taxid in the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_searcher","text":"internal function return esearch/list object used internal 'fetcher' functions retrieve wanted data. can work single 'id' object (single string character) reason usually run inside functions reported \"requests_handlers.R\" like connection_handler() ncbi_limit_handler().","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_searcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search a taxon or taxid in the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_searcher","text":"","code":"ncbi_searcher(   id,   db = \"taxonomy\",   retmax = 200,   default.filter = TRUE,   filter = NULL )"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_searcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search a taxon or taxid in the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_searcher","text":"id taxon taxid. db NCBI database searched. Either 'nucleotide' 'taxonomy'. retmax number maximum ids show esearch list object. Defaults 200. default.filter logical, whether filter records excluding whole genome shotgun sequences transcribed shotgun assembly. Defaults TRUE. filter Additional text string/s included query. Works 'nucleotide' option 'db' parameter.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_searcher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search a taxon or taxid in the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_searcher","text":"esearch/list object, including web_history object. latter used 'fetcher' functions retrieve xml fasta objects.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_searcher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search a taxon or taxid in the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_searcher","text":"","code":"if (FALSE) { ncbi_searcher(\"Thouarella\", db = \"taxonomy\") ncbi_searcher(\"283554\", db = \"nucleotide\") }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_xml_fetcher.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch the taxonomic classification or the sequence metadata from the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_xml_fetcher","title":"Fetch the taxonomic classification or the sequence metadata from the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_xml_fetcher","text":"web_history object used download xml objects NCBI database. parameters retstart rate changed internally download ids web_history object, usually identifying 20 ids time.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_xml_fetcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch the taxonomic classification or the sequence metadata from the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_xml_fetcher","text":"","code":"ncbi_xml_fetcher(   searchWebHist = NULL,   ids = NULL,   db = \"taxonomy\",   retstart,   rate )"},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_xml_fetcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch the taxonomic classification or the sequence metadata from the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_xml_fetcher","text":"searchWebHist web_history object. ids character vector accession/GI ids. db NCBI database fetch data. Either 'nucleotide' 'taxonomy'. retstart initial numeric position ids included web_history object fetched. web_history objects 1 ids , 'NULL' preferable 0. rate final numeric position ids included web_history object fetched.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_xml_fetcher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch the taxonomic classification or the sequence metadata from the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_xml_fetcher","text":"'taxonomy' 'nucleotide' db searches return xml object 'XMLInternalDocument/XMLAbstractDocument' class. object processed functions 'xml_helpers.R' extract wanted data.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/ncbi_xml_fetcher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch the taxonomic classification or the sequence metadata from the NCBI 'taxonomy' or 'nucleotide' databases — ncbi_xml_fetcher","text":"","code":"if (FALSE) {   search <- ncbi_searcher(\"Thouarella\", db = \"taxonomy\")   fetch <- ncbi_xml_fetcher(search$web_history, retstart = 0, rate = 20) }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://matteoce.github.io/barcodeMineR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a barplot using the function geom_density_ridges from ggplot2, to compare the final length of the sequences (field lengthGene) with the original length of sequences (field lengthSource). — plot_length","title":"Create a barplot using the function geom_density_ridges from ggplot2, to compare the final length of the sequences (field lengthGene) with the original length of sequences (field lengthSource). — plot_length","text":"Create barplot using function geom_density_ridges ggplot2, compare final length sequences (field lengthGene) original length sequences (field lengthSource).","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a barplot using the function geom_density_ridges from ggplot2, to compare the final length of the sequences (field lengthGene) with the original length of sequences (field lengthSource). — plot_length","text":"","code":"plot_length(   refdb,   limit = 1000,   breaks = 50,   level = NULL,   select = NULL,   scaling = TRUE )"},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a barplot using the function geom_density_ridges from ggplot2, to compare the final length of the sequences (field lengthGene) with the original length of sequences (field lengthSource). — plot_length","text":"refdb (refdb) refdb object. limit (numeric) length \"base pairs\" sequences longer grouped reported last bar x axis. breaks (numeric) length range \"base pairs\" x axis. level (character) character vector indicating taxonomic level facet_wrap function ggplot2 refer . one \"phylum\", \"class\", \"order\", \"family\" \"genus\". select (character) parameter allows pre-filter refdb object based taxonomic name, must present records table object. scaling (logical) defaults TRUE, reports height bars according sequence count refdb object, thus, used level parameter, heigth bars different wraps can compared.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a barplot using the function geom_density_ridges from ggplot2, to compare the final length of the sequences (field lengthGene) with the original length of sequences (field lengthSource). — plot_length","text":"geom_density_ridges ggplot2 plot.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a barplot using the function geom_density_ridges from ggplot2, to compare the final length of the sequences (field lengthGene) with the original length of sequences (field lengthSource). — plot_length","text":"","code":"if (FALSE) { (lengthPlot <- plot_length(refdb)) }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_primers.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bubble Plot showing number of sequences and average/range length for each primer — plot_primers","title":"Create a Bubble Plot showing number of sequences and average/range length for each primer — plot_primers","text":"Create Bubble Plot showing number sequences average/range length primer","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_primers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bubble Plot showing number of sequences and average/range length for each primer — plot_primers","text":"","code":"plot_primers(   refdb,   level = \"phylum\",   select = NULL,   size_range = NULL,   measure = \"average\",   tax.fct.levels = NULL,   prim.fct.levels = NULL )"},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_primers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bubble Plot showing number of sequences and average/range length for each primer — plot_primers","text":"refdb (refdb) refdb object. level (character) character vector indicating taxonomic level x axis refer . one \"phylum\", \"class\", \"order\", \"family\" \"genus\". select (character) parameter allows pre-filter refdb object based taxonomic name, must present records table object. size_range (integer vector) allows change size bubbles. measure (character) either \"range\" \"average\" (default). first case, range length sequences records filtered combination primer taxonomic name shown. average length shown otherwise. tax.fct.levels (character) vector taxonomic names allows re-order x axis based custom order. prim.fct.levels (character) vector primers' names allows re-order y axis based custom order.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_primers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bubble Plot showing number of sequences and average/range length for each primer — plot_primers","text":"Bubble plot, 'ggplot2' plot object, can saved modified.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/plot_primers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bubble Plot showing number of sequences and average/range length for each primer — plot_primers","text":"","code":"if (FALSE) { (BubPlot <- plot_primers(total_ore)) }"},{"path":"https://matteoce.github.io/barcodeMineR/reference/postAndCheck_OLD.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a web_history object from a vector of accession numbers. — postAndCheck_OLD","title":"Get a web_history object from a vector of accession numbers. — postAndCheck_OLD","text":"Old version. Also checks web_history object contains correct number records.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/postAndCheck_OLD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a web_history object from a vector of accession numbers. — postAndCheck_OLD","text":"","code":"postAndCheck_OLD(names)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/postAndCheck_OLD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a web_history object from a vector of accession numbers. — postAndCheck_OLD","text":"listAccn vector accession numbers.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/postAndCheck_OLD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a web_history object from a vector of accession numbers. — postAndCheck_OLD","text":"list web_history object first element corresponding accessions second element.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/select_accessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a selection table interactively to return a vector of accession number concatenated with a gene or product name — select_accessions","title":"Filter a selection table interactively to return a vector of accession number concatenated with a gene or product name — select_accessions","text":"take tab basin info accession number (CDS /rRNA name, coordinates sequence) output character vector accNum feature name (gene product) separated pipe.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/select_accessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a selection table interactively to return a vector of accession number concatenated with a gene or product name — select_accessions","text":"","code":"select_accessions(selection_tab, ask = TRUE)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/select_accessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a selection table interactively to return a vector of accession number concatenated with a gene or product name — select_accessions","text":"selection_tab selection table, produced ::: function","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/select_accessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a selection table interactively to return a vector of accession number concatenated with a gene or product name — select_accessions","text":"vector type: \"accession number|gene product name\"","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/set_id_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the vector a species or a taxid. — set_id_type","title":"Is the vector a species or a taxid. — set_id_type","text":"vector species taxid.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/set_id_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the vector a species or a taxid. — set_id_type","text":"","code":"set_id_type(ids)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/set_id_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the vector a species or a taxid. — set_id_type","text":"ids character wtring taxonomic name taxid.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/set_id_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the vector a species or a taxid. — set_id_type","text":"condition, either TRUE FALSE.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/set_ncbi_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose the optimal http requests limit based on the presence or absence of an NCBI API key. — set_ncbi_rate","title":"Choose the optimal http requests limit based on the presence or absence of an NCBI API key. — set_ncbi_rate","text":"Choose optimal http requests limit based presence absence NCBI API key.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/set_ncbi_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose the optimal http requests limit based on the presence or absence of an NCBI API key. — set_ncbi_rate","text":"","code":"set_ncbi_rate(api_rate)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/set_ncbi_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose the optimal http requests limit based on the presence or absence of an NCBI API key. — set_ncbi_rate","text":"api_rate api rate limit, set user","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/set_ncbi_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose the optimal http requests limit based on the presence or absence of an NCBI API key. — set_ncbi_rate","text":"number, defining correct api rate.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/textToDNAStringSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn a data.frame or fasta text object of sequences into DNAStringSet — textToDNAStringSet","title":"Turn a data.frame or fasta text object of sequences into DNAStringSet — textToDNAStringSet","text":"Turn data.frame fasta text object sequences DNAStringSet","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/textToDNAStringSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn a data.frame or fasta text object of sequences into DNAStringSet — textToDNAStringSet","text":"","code":"textToDNAStringSet(sequences)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/textToDNAStringSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn a data.frame or fasta text object of sequences into DNAStringSet — textToDNAStringSet","text":"sequences Object containing sequences data.frame fasta text object","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/textToDNAStringSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn a data.frame or fasta text object of sequences into DNAStringSet — textToDNAStringSet","text":"DNAStringSet","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/web_history_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the right retstart and retmax for the NCBI fetcher functions. — web_history_parameter","title":"Calculate the right retstart and retmax for the NCBI fetcher functions. — web_history_parameter","text":"Calculate right retstart retmax NCBI fetcher functions.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/web_history_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the right retstart and retmax for the NCBI fetcher functions. — web_history_parameter","text":"","code":"web_history_parameter(split, hits, hits_x_iteration)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/web_history_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the right retstart and retmax for the NCBI fetcher functions. — web_history_parameter","text":"split starting position. hits total number ids web_history object used download data NCBI. hits_x_iteration number ids fetch execution time.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/web_history_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the right retstart and retmax for the NCBI fetcher functions. — web_history_parameter","text":"list two values: retstart parameter retmax. last one calculated based total number ids web_history object starting position.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/web_history_splitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all the retstart positions based on total number of counts and xml rate of a web_history object. — web_history_splitter","title":"Get all the retstart positions based on total number of counts and xml rate of a web_history object. — web_history_splitter","text":"Get retstart positions based total number counts xml rate web_history object.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/web_history_splitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all the retstart positions based on total number of counts and xml rate of a web_history object. — web_history_splitter","text":"","code":"web_history_splitter(counts, rate)"},{"path":"https://matteoce.github.io/barcodeMineR/reference/web_history_splitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all the retstart positions based on total number of counts and xml rate of a web_history object. — web_history_splitter","text":"counts total number records corresponding web_istory object rate number record download eahc iteration ncbi_xml_fetcher function.","code":""},{"path":"https://matteoce.github.io/barcodeMineR/reference/web_history_splitter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all the retstart positions based on total number of counts and xml rate of a web_history object. — web_history_splitter","text":"numeric vector retstart position particular","code":""}]
